## 테스트에서 쓸 값들 미리 지정
@username = admin1234
@password = Abcdef12345!
@nickname = 관리자
@email = admin123@email.com
@adminCode = WkdWMlpXNTBaWElnYzNWd1pYSWdZV1J0YVc0Z1kyOWtaUT09

# 어드민 유저 테스트

### 유저 회원 가입
POST http://localhost:8080/auth/sign-up/admin
Content-Type: application/json

{
  "username":"{{username}}",
  "password":"{{password}}",
  "nickname":"{{nickname}}",
  "email":"{{email}}",
  "adminCode": "{{adminCode}}"
}


### 관리자 로그인 (로그인 요청시 억세스토큰, 리플레시토큰 자동 저장 후 다른곳에서 가져다 쓸수 있습니다)
POST http://localhost:8080/auth/login
Content-Type: application/json

{
  "username":"{{username}}",
  "password":"{{password}}"
}

> {%
  client.global.set("Authorization", response.headers.valueOf("Authorization"));
  client.global.set("X-Refresh-Token", response.headers.valueOf("X-Refresh-Token"));
%}

### 리플레시 토큰으로 억세스토큰 재발행
POST http://localhost:8080/auth/refresh
Authorization:{{Authorization}}
X-Refresh-Token:{{X-Refresh-Token}}

> {%
  client.global.set("Authorization", response.headers.valueOf("Authorization"));
  client.global.set("X-Refresh-Token", response.headers.valueOf("X-Refresh-Token"));
%}

### 관리자 로그아웃
POST http://localhost:8080/auth/logout
Authorization:{{Authorization}}


### 관리자 탈퇴
DELETE http://localhost:8080/auth/withdraw
Authorization:{{Authorization}}